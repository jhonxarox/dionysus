# Generated by Django 2.0.7 on 2018-07-17 03:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appversion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.TextField(blank=True, db_column='Platform', null=True)),
                ('app_version', models.TextField(blank=True, db_column='App Version', null=True)),
                ('date_release', models.TextField(blank=True, db_column='Date Release', null=True)),
            ],
            options={
                'db_table': 'appversion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fraud',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appsflyer_id', models.TextField(blank=True, db_column='AppsFlyer ID', null=True)),
            ],
            options={
                'db_table': 'fraud',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Install',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributed_touch_type', models.TextField(blank=True, db_column='Attributed Touch Type', null=True)),
                ('attributed_touch_time', models.TextField(blank=True, db_column='Attributed Touch Time', null=True)),
                ('install_time', models.TextField(blank=True, db_column='Install Time', null=True)),
                ('event_time', models.TextField(blank=True, db_column='Event Time', null=True)),
                ('event_name', models.TextField(blank=True, db_column='Event Name', null=True)),
                ('event_value', models.FloatField(blank=True, db_column='Event Value', null=True)),
                ('event_revenue', models.FloatField(blank=True, db_column='Event Revenue', null=True)),
                ('event_revenue_currency', models.FloatField(blank=True, db_column='Event Revenue Currency', null=True)),
                ('event_revenue_usd', models.FloatField(blank=True, db_column='Event Revenue USD', null=True)),
                ('event_source', models.TextField(blank=True, db_column='Event Source', null=True)),
                ('is_receipt_validated', models.FloatField(blank=True, db_column='Is Receipt Validated', null=True)),
                ('partner', models.TextField(blank=True, db_column='Partner', null=True)),
                ('media_source', models.TextField(blank=True, db_column='Media Source', null=True)),
                ('channel', models.TextField(blank=True, db_column='Channel', null=True)),
                ('keywords', models.FloatField(blank=True, db_column='Keywords', null=True)),
                ('campaign', models.TextField(blank=True, db_column='Campaign', null=True)),
                ('campaign_id', models.TextField(blank=True, db_column='Campaign ID', null=True)),
                ('adset', models.TextField(blank=True, db_column='Adset', null=True)),
                ('adset_id', models.TextField(blank=True, db_column='Adset ID', null=True)),
                ('ad', models.TextField(blank=True, db_column='Ad', null=True)),
                ('ad_id', models.TextField(blank=True, db_column='Ad ID', null=True)),
                ('ad_type', models.TextField(blank=True, db_column='Ad Type', null=True)),
                ('site_id', models.TextField(blank=True, db_column='Site ID', null=True)),
                ('sub_site_id', models.TextField(blank=True, db_column='Sub Site ID', null=True)),
                ('sub_param_1', models.TextField(blank=True, db_column='Sub Param 1', null=True)),
                ('sub_param_2', models.FloatField(blank=True, db_column='Sub Param 2', null=True)),
                ('sub_param_3', models.FloatField(blank=True, db_column='Sub Param 3', null=True)),
                ('sub_param_4', models.FloatField(blank=True, db_column='Sub Param 4', null=True)),
                ('sub_param_5', models.TextField(blank=True, db_column='Sub Param 5', null=True)),
                ('cost_model', models.TextField(blank=True, db_column='Cost Model', null=True)),
                ('cost_value', models.FloatField(blank=True, db_column='Cost Value', null=True)),
                ('cost_currency', models.TextField(blank=True, db_column='Cost Currency', null=True)),
                ('contributor_1_partner', models.TextField(blank=True, db_column='Contributor 1 Partner', null=True)),
                ('contributor_1_media_source', models.TextField(blank=True, db_column='Contributor 1 Media Source', null=True)),
                ('contributor_1_campaign', models.TextField(blank=True, db_column='Contributor 1 Campaign', null=True)),
                ('contributor_1_touch_type', models.TextField(blank=True, db_column='Contributor 1 Touch Type', null=True)),
                ('contributor_1_touch_time', models.TextField(blank=True, db_column='Contributor 1 Touch Time', null=True)),
                ('contributor_2_partner', models.TextField(blank=True, db_column='Contributor 2 Partner', null=True)),
                ('contributor_2_media_source', models.TextField(blank=True, db_column='Contributor 2 Media Source', null=True)),
                ('contributor_2_campaign', models.TextField(blank=True, db_column='Contributor 2 Campaign', null=True)),
                ('contributor_2_touch_type', models.TextField(blank=True, db_column='Contributor 2 Touch Type', null=True)),
                ('contributor_2_touch_time', models.TextField(blank=True, db_column='Contributor 2 Touch Time', null=True)),
                ('contributor_3_partner', models.TextField(blank=True, db_column='Contributor 3 Partner', null=True)),
                ('contributor_3_media_source', models.TextField(blank=True, db_column='Contributor 3 Media Source', null=True)),
                ('contributor_3_campaign', models.TextField(blank=True, db_column='Contributor 3 Campaign', null=True)),
                ('contributor_3_touch_type', models.TextField(blank=True, db_column='Contributor 3 Touch Type', null=True)),
                ('contributor_3_touch_time', models.TextField(blank=True, db_column='Contributor 3 Touch Time', null=True)),
                ('region', models.TextField(blank=True, db_column='Region', null=True)),
                ('country_code', models.TextField(blank=True, db_column='Country Code', null=True)),
                ('state', models.TextField(blank=True, db_column='State', null=True)),
                ('city', models.TextField(blank=True, db_column='City', null=True)),
                ('postal_code', models.TextField(blank=True, db_column='Postal Code', null=True)),
                ('dma', models.TextField(blank=True, db_column='DMA', null=True)),
                ('ip', models.TextField(blank=True, db_column='IP', null=True)),
                ('wifi', models.NullBooleanField(db_column='WIFI')),
                ('operator', models.TextField(blank=True, db_column='Operator', null=True)),
                ('carrier', models.TextField(blank=True, db_column='Carrier', null=True)),
                ('language', models.TextField(blank=True, db_column='Language', null=True)),
                ('appsflyer_id', models.TextField(blank=True, db_column='AppsFlyer ID', null=True)),
                ('advertising_id', models.TextField(blank=True, db_column='Advertising ID', null=True)),
                ('idfa', models.FloatField(blank=True, db_column='IDFA', null=True)),
                ('android_id', models.TextField(blank=True, db_column='Android ID', null=True)),
                ('customer_user_id', models.TextField(blank=True, db_column='Customer User ID', null=True)),
                ('imei', models.FloatField(blank=True, db_column='IMEI', null=True)),
                ('idfv', models.FloatField(blank=True, db_column='IDFV', null=True)),
                ('platform', models.TextField(blank=True, db_column='Platform', null=True)),
                ('device_type', models.TextField(blank=True, db_column='Device Type', null=True)),
                ('os_version', models.TextField(blank=True, db_column='OS Version', null=True)),
                ('app_version', models.TextField(blank=True, db_column='App Version', null=True)),
                ('sdk_version', models.TextField(blank=True, db_column='SDK Version', null=True)),
                ('app_id', models.TextField(blank=True, db_column='App ID', null=True)),
                ('app_name', models.TextField(blank=True, db_column='App Name', null=True)),
                ('bundle_id', models.TextField(blank=True, db_column='Bundle ID', null=True)),
                ('is_retargeting', models.NullBooleanField(db_column='Is Retargeting')),
                ('retargeting_conversion_type', models.FloatField(blank=True, db_column='Retargeting Conversion Type', null=True)),
                ('attribution_lookback', models.TextField(blank=True, db_column='Attribution Lookback', null=True)),
                ('reengagement_window', models.FloatField(blank=True, db_column='Reengagement Window', null=True)),
                ('is_primary_attribution', models.FloatField(blank=True, db_column='Is Primary Attribution', null=True)),
                ('user_agent', models.TextField(blank=True, db_column='User Agent', null=True)),
                ('http_referrer', models.TextField(blank=True, db_column='HTTP Referrer', null=True)),
                ('original_url', models.TextField(blank=True, db_column='Original URL', null=True)),
                ('install_app_store', models.FloatField(blank=True, db_column='Install App Store', null=True)),
                ('match_type', models.TextField(blank=True, db_column='Match Type', null=True)),
                ('contributor_1_match_type', models.TextField(blank=True, db_column='Contributor 1 Match Type', null=True)),
                ('contributor_2_match_type', models.TextField(blank=True, db_column='Contributor 2 Match Type', null=True)),
                ('contributor_3_match_type', models.TextField(blank=True, db_column='Contributor 3 Match Type', null=True)),
                ('device_category', models.TextField(blank=True, db_column='Device Category', null=True)),
                ('google_play_referrer', models.TextField(blank=True, db_column='Google Play Referrer', null=True)),
                ('google_play_click_time', models.TextField(blank=True, db_column='Google Play Click Time', null=True)),
                ('google_play_install_begin_time', models.TextField(blank=True, db_column='Google Play Install Begin Time', null=True)),
                ('ctit_status', models.NullBooleanField(db_column='CTIT Status')),
                ('device_status', models.NullBooleanField(db_column='Device Status')),
            ],
            options={
                'db_table': 'install',
                'managed': False,
            },
        ),
    ]
